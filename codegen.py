import csv

from configuration import Configuration


def generate_enum(classname, items):
    # VS Code does not auto-complete below short-hand
    # return f"{classname} = Enum('{classname}', {items})"
    class_line = f"class {classname}(Enum):"
    item_lines = [f'    {item.upper().replace(" ", "_")} = "{item}"' for item in items]
    return "\n".join([class_line] + item_lines)


def get_items_from_column(col):
    items_no_none = [item for item in col if item]
    return items_no_none


def codegen_entities_py():
    with open(Configuration.enums_file) as csv_file:
        reader = csv.reader(csv_file, delimiter=",")
        next(reader)  # skip headers
        rows = list(reader)
        columns = list(zip(*rows))
        sections = get_items_from_column(columns[0])
        instruments = get_items_from_column(columns[1])
        articulations = get_items_from_column(columns[2])

    docstring = '"""Do not modify manually. Autogenerated."""'
    import_stmt = "from enum import auto, Enum"
    section_code = generate_enum("Section", sections)
    instrument_code = generate_enum("Instrument", instruments)
    articulation_code = generate_enum("Articulation", articulations)

    code = [docstring, import_stmt, section_code, instrument_code, articulation_code]

    with open("entities.py", "w") as f:
        f.writelines([s + "\n\n\n" for s in code])


if __name__ == "__main__":
    codegen_entities_py()
